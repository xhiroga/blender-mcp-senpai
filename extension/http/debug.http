GET http://localhost:13180/healthz HTTP/1.1

### 

POST http://localhost:13180/execute HTTP/1.1
content-type: application/json

{
  "code": ""
}

###

POST http://localhost:13180/execute HTTP/1.1
content-type: application/json

{
  "code": "import bpy\n\n# 既存のメッシュを削除\nbpy.ops.object.select_all(action='SELECT')\nbpy.ops.object.delete()\n\n# UV球体を作成\nbpy.ops.mesh.primitive_uv_sphere_add(radius=1, location=(0,0,0))\n\n# 作成したオブジェクトを選択\nsphere = bpy.context.active_object\n\n# マテリアルを作成して適用\nmat = bpy.data.materials.new(name='SphereMaterial')\nmat.use_nodes = True\nmat.node_tree.nodes['Principled BSDF'].inputs[0].default_value = (0.8, 0.2, 0.2, 1)  # 赤色\nsphere.data.materials.append(mat)"
}

### Display bpy.context contents
POST http://localhost:13180/execute HTTP/1.1
content-type: application/json

{
  "code": "import bpy\nimport pprint\n\n# Create a function to recursively print all attributes\ndef print_attributes(obj, indent=0):\n    # Get all attributes that don't start with '__'\n    attrs = [attr for attr in dir(obj) if not attr.startswith('__')]\n    \n    # Print each attribute and its value\n    for attr in attrs:\n        try:\n            value = getattr(obj, attr)\n            # Print the attribute name and value\n            print('  ' * indent + f'{attr}: {value}')\n            \n            # If the value is an object with attributes, recursively print them\n            if hasattr(value, '__dict__') and not isinstance(value, (str, int, float, bool, list, dict, tuple)):\n                print_attributes(value, indent + 1)\n        except Exception as e:\n            print('  ' * indent + f'{attr}: Error accessing - {str(e)}')\n\n# Print all attributes of bpy.context\nprint('bpy.context contents:')\nprint_attributes(bpy.context)"
}

### Get Resources

GET http://localhost:13180/resources HTTP/1.1

### Get Resource

GET http://localhost:13180/resources/objects/Camera HTTP/1.1
