#!/bin/bash

# Dual Repo Pattern - Prevent merging private branches into public branches
# This hook prevents accidentally merging branches from 'private/' into non-private branches

# Get the current branch name
current_branch=$(git symbolic-ref --short HEAD 2>/dev/null)

# If current branch doesn't start with 'private/'
if [[ ! "$current_branch" =~ ^private/ ]]; then
    # Check if we're merging from a private branch
    # Git sets MERGE_HEAD during a merge
    if [ -f .git/MERGE_HEAD ]; then
        merge_branch=$(git name-rev --name-only $(cat .git/MERGE_HEAD) 2>/dev/null)
        
        # Check if the branch being merged starts with 'private/'
        if [[ "$merge_branch" =~ private/ ]]; then
            echo "Error: Attempting to merge private branch into public branch '$current_branch'"
            echo "Private branches should not be merged into public branches"
            echo "Current branch: $current_branch"
            echo "Merging from: $merge_branch"
            exit 1
        fi
    fi
fi

exit 
